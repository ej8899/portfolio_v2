.skills {
  --skills-gap: min(4.5vh, 3rem);
  padding-block: var(--section-vertical-padding);
  z-index: 2;
  position: relative;
  color: var(--clr-neutral-900);
  
  background-color: var(--clr-about-bg-top);
  background: linear-gradient(var(--clr-about-bg-top), var(--clr-about-bg-bottom));
  
  //border: 2px solid red;
  padding-top:0;
  h2 {
    position: relative;
    margin-bottom: var(--about-gap);
    color: var(--clr-neutral-900);
    text-shadow: 
    -1px 1px 6px var(--clr-neutral-400),
    1px 1px 6px var(--clr-neutral-400);

    &::after {
      content: '';
      position: absolute;
      top: 70%;
      left: 9.3ch;
      width: 3.2ch;
      height: 0.45ch;
      z-index: -1;
      background: var(--clr-primary-100);
      animation: pulseSkewScale infinite 1s ease-in-out;
    }
  }

  &__content {
    display: grid;
    grid-template-columns: 1.25fr 1fr;
    gap: var(--skills-gap);
    z-index: 2;
    @media (max-width: 950px) {
      grid-template-columns: 1fr;
    }
  }

  h3 {
    font-size: clamp(2rem, 8vw, 3rem);
  }

  &__text {
    opacity: 1;
    transform: translateY(30%);
    padding: 5px;
    transition: opacity 1.25s ease-out, transform 0.5s ease-out;
    width: 100%;
    justify-content: center;
    align-items: center;
    &.animate-in {
      opacity: 1;
      transform: translateY(0);
    }

    &__centeredblock {
      width: 800px;
    }

    h2 {
      position: relative;

      margin-bottom: var(--skills-gap);

      color: var(--clr-neutral-900);

      &::after {
        content: '';
        position: absolute;
        top: 70%;
        left: 4.6ch;
        width: 2ch;
        height: 0.45ch;
        background: var(--clr-primary-100);
        animation: pulseSkewScale infinite 1s ease-in-out;
      }
    }

    p {
      font-size: clamp(0.9rem, 3.15vw, 1.1rem);
      line-height: 1.8;
      margin-bottom: 1rem;
    }

    a,
    a:visited,
    a:active {
      color: var(--clr-primary-200);
      font-weight: var(--fw-bold);
    }
  }

  &__skills {
    opacity: 0;
    transform: translateY(-30%);

    transition: opacity 1.25s ease-out, transform 0.5s ease-out;

    &.animate-in {
      opacity: 1;
      transform: translate(0, 0);
    }
  }

  &__skills-title {
    margin-bottom: var(--skills-gap);
  }

  &__skills-wrapper {
    display: flex;
    flex-wrap: wrap;
    gap: 0.75rem 1rem;
  }

  &__skill {
    display: flex;
    align-items: center;
    gap: 1rem;

    padding: 0.5rem;

    color: var(--clr-neutral-700);
    background: var(--clr-neutral-300);
    border-radius: var(--border-radius-100);

    filter: grayscale(100%) contrast(1);

    transition: all 0.2s ease-in-out;

    &:hover {
      transform: translateY(-5px) scale(1.25);
      filter: grayscale(0%);

      color: var(--clr-neutral-100);
      background: var(--clr-neutral-800);
    }

    svg {
      width: 28px;
      aspect-ratio: 1/1;
    }

    p {
      padding-right: 0.75rem;

      font-weight: var(--fw-bold);
      font-size: 0.95rem;
    }
  }
}

.submessage {
  font-size: 1.2rem;
  align-items: center;
  margin: 0 auto;
  display: flex;
  justify-content: center;
}

.circle-tooltip {
  fill: teal;
  cursor: pointer;
}

.circle-tooltip::before {
  content: attr(data-tooltip);
  position: absolute;
  bottom: 100%; /* Position above the circle */
  left: 50%; /* Center horizontally */
  transform: translateX(-50%);
  background-color: rgba(0, 0, 0, 0.8);
  color: white;
  padding: 4px 8px;
  font-size: 14px;
  white-space: nowrap;
  opacity: 0;
  transition: opacity 0.2s;
}

.circle-tooltip:hover::before {
  opacity: 1;
}
.devsvg {
  transition: all 0.5s ease-in-out;
}
use {
  transition: all 0.3s ease-in-out;
}
.devsvg:hover  {
  //transform: rotate(3deg) scale(1.0);
  // TODO cleanup unused styles here if we're content with things!

  color: black !important;
  //filter: drop-shadow(1px 1px 0px black);
  // box-shadow: 0px 0px 2px 2px black; /*any color you want*/
  // border: 1px solid teal;
  transform: scale(1.1);
  
  // background: linear-gradient(to left top, rgb(181, 118, 0) 0%, rgba(255,165,0,1) 30%);
}
.devsvg:hover > use {
  fill: teal !important;
  //transform: rotate(1.5deg);
}


.skill-details-container {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  width: 100%
}

.skill-details-column {
  flex: 1;
  margin: 10px;
  //padding: 20px;
  //border: 1px solid #ddd;
  //background-color: #f9f9f9;
  text-align: center;
}

/* Media queries for responsiveness */
@media (max-width: 850px) {
  .skill-details-container {
    flex-direction: column;
  }

  .skill-details-column {
    flex: 1;
    margin: 0px;
    padding: 0px;
    width: 100%;
  }
}

.spacer {
  height:45px;
}

.skill-card {
  border-radius: 10px;
  //filter: drop-shadow(0 5px 10px 0 #ffffff);
  box-shadow: var(--box-shadow-full);;
  //width: 400px;
  height: 200px;
  background-color: #ffffff;
  padding: 0px;
  position: relative;
  z-index: 0;
  overflow: hidden;
  transition: 0.6s ease-in;
  display: flex;
  align-content: start;
  text-align: left;
  border: 2px solid black;
  @media (max-width: 800px) {
    height: 300px;
  }
}

.skill-card::before {
  content: "";
  position: absolute;
  z-index: -1;
  top: -15px;
  //right: -15px;
  left: 0px;
  background: rgb(255,215,84);
  background: linear-gradient(180deg, rgba(255,215,84,1) 0%, rgba(255,165,0,1) 65%);
  height:150%;
  width: 10px;
  border-radius: 32px;
  transform: scale(1);
  transform-origin: 50% 50%;
  transition: transform 0.5s ease-out;
}

.skill-card:hover{
  //transition-delay:0.3s ;
  //transform: scale(115,1.5);
  box-shadow: var(--box-shadow-hover);
}

.skill-card:hover{
  color: #ffffff;
  color: black;
}

.skill-card p{
    padding: 10px 0;
}