footer {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: row;
  color: var(--clr-neutral-400);
  position: relative;
  text-transform: uppercase;
  font-family: var(--ff-accent);
  font-size: 0.9rem;
  height: 120px;
  padding-bottom: 100px;
  //height: 100vh;
  strong {
    color: var(--clr-primary-100);
  }
  z-index: 0;
  svg {
    height: 32px;
    transition: all var(--transition-short) ease-in-out;
    &:hover {
      transform: scale(1.1);
    }
  }
  background-color: #343a40;
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='28' height='49' viewBox='0 0 28 49'%3E%3Cg fill-rule='evenodd'%3E%3Cg id='hexagons' fill='%23000000' fill-opacity='0.25' fill-rule='nonzero'%3E%3Cpath d='M13.99 9.25l13 7.5v15l-13 7.5L1 31.75v-15l12.99-7.5zM3 17.9v12.7l10.99 6.34 11-6.35V17.9l-11-6.34L3 17.9zM0 15l12.98-7.5V0h-2v6.35L0 12.69v2.3zm0 18.5L12.98 41v8h-2v-6.85L0 35.81v-2.3zM15 0v7.5L27.99 15H28v-2.31h-.01L17 6.35V0h-2zm0 49v-8l12.99-7.5H28v2.31h-.01L17 42.15V49h-2z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E"), linear-gradient(to right top, #202123, #1d1e1e,  #211f22, #151314, #000000);
}

// .footer::before {
//   content: '';
//   position: absolute;
//   top: 0;
//   left: 0;
//   width: 100%;
//   height: 100%;
//   background: rgba(0, 0, 0, 0.5); /* Overlay color, adjust as needed */
// }

.footer-section {
  flex: 1;
  text-align: center;
  justify-content: center;
  align-items: center;
  padding: 0px;
  margin: 0px;
}

@media (max-width: 1000px) {
  .footer {
    flex-direction: column;
    justify-content: center;
    align-items: center;
    //height:150px;
  }
  .footer__wrapper {
    flex-direction: column !important;
  }
  .footer-section {
    width: 100%;
  }
}

.footer__wrapper {
  // max-width: max-content;
  //width: 1280px;
  width:100%;
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  gap: 1rem;
  
  padding: 1rem 0rem;
  
  // for parallax - JS listener to bring it to zindex 0 when visible
  position: fixed;
  //z-index: -1;
  bottom: 0;
  height: 120px;
  // border-radius: var(--border-radius-400) var(--border-radius-400) 0 0;
  // background: var(--clr-neutral-900-t);
  @media (max-width: 500px) {
    // padding-bottom: 100px;
  }
}

.copyright-text {
  font-size: 13px;
  font-weight: 700;
  letter-spacing: 0.05em;
  // text-transform: uppercase;
  // line-height: 37px;
  padding-bottom: 0rem;
  font-family: "Jost", sans-serif;
  //max-width: 1280px;
  width:100%;
}

.footer-hidden {
  position: fixed;
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
  align-items: center;
  
  // background-color: orange;
  width: 100%;
  height: calc(100vh - 170px);
  padding-top:100px;
  bottom: 120px;
  color: orange;
  font-family: Jost;
  font-weight: bold;
  font-size: 48px;
  z-index: 1;
}


.footer.build-clicked {
  height: 100vh !important;
}

.glitch {
  //color: rgb(223, 191, 191);
  color:orange;
  position: relative;
  font-size: 4vw;
  // margin: 70px 200px;
  animation: glitch 5s 5s infinite;
  text-wrap: nowrap;
}

.glitch::before {
  content: attr(data-text);
  position: absolute;
  left: -2px;
  //text-shadow: -5px 0 magenta;
  text-shadow: -5px 0 #884ab2;
  //background: black;
  overflow: hidden;
  top: 0;
  animation: noise-1 3s linear infinite alternate-reverse, glitch 5s 5.05s infinite;
}

.glitch::after {
  content: attr(data-text);
  position: absolute;
  left: 2px;
  text-shadow: -5px 0 #471ca8;
  //background: black;
  overflow: hidden;
  top: 0;
  animation: noise-2 3s linear infinite alternate-reverse, glitch 5s 5s infinite;
}

@keyframes glitch {
  1%{
    transform: rotateX(10deg) skewX(90deg);
  }
  2%{
    transform: rotateX(0deg) skewX(0deg);
  }
}

.glow {
  @extend .glitch;
  // text-shadow: 0 0 1000px rgb(223, 191, 191);
  text-shadow: 0 0 1000px #471ca8;
  color: transparent;
  position: absolute;
  top: 0;
}

@keyframes noise-1 {
  $steps: 30;
  @for $i from 1 through $steps {
    #{percentage($i*(1/$steps))} {
      $top: random(100);
      $bottom: random(101 - $top);
      clip-path: inset(#{$top}px 0 #{$bottom}px 0);
    }
  }
}

@keyframes noise-2 {
  $steps: 30;
  @for $i from 0 through $steps {
    #{percentage($i*(1/$steps))} {
      $top: random(100);
      $bottom: random(101 - $top);
      clip-path: inset(#{$top}px 0 #{$bottom}px 0);
    }
  }
}
